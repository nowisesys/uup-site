<?php
/*
 * Copyright (C) 2017 Anders LÃ¶vgren (QNET/BMC CompDept).
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

?>

<style>
    #files-menu {
        position: relative;
        float: right;
    }
</style>

<div id="content-files w3-right">
    <div id="files-menu" class="w3-dropdown-hover">
        <button class="w3-button w3-light-grey"><i class="fa fa-plus-square-o" aria-hidden="true" ></i> Create </button>
        <div class="w3-dropdown-content w3-bar-block w3-card-4">
            <a href="#" class="w3-bar-item w3-button" onclick="create_directory()"><?= _("Directory") ?></a>
            <a href="#" class="w3-bar-item w3-button" onclick="create_file()"><?= _("Empty File") ?></a>

            <div class="w3-bar-item w3-button" onclick="toggle_accordion('view-files')">
                <i class="fa fa-caret-down"></i> View </div>
            <div id="view-files" class="w3-hide w3-white w3-card-4">
                <a href="#" class="w3-bar-item w3-button" onclick="create_template('standard-view')"><?= _("Standard") ?></a>
                <a href="#" class="w3-bar-item w3-button" onclick="create_template('secure-view')"><?= _("Secure") ?></a>
            </div>

            <div class="w3-bar-item w3-button" onclick="toggle_accordion('page-files')">
                <i class="fa fa-caret-down"></i> Page </div>
            <div id="page-files" class="w3-hide w3-white w3-card-4">
                <a href="#" class="w3-bar-item w3-button" onclick="create_template('standard-page')"><?= _("Standard") ?></a>
                <a href="#" class="w3-bar-item w3-button" onclick="create_template('secure-page')"><?= _("Secure") ?></a>
            </div>

            <div class="w3-bar-item w3-button" onclick="toggle_accordion('service-files')">
                <i class="fa fa-caret-down"></i> Service </div>
            <div id="service-files" class="w3-hide w3-white w3-card-4">
                <a href="#" class="w3-bar-item w3-button" onclick="create_template('standard-service')"><?= _("Standard") ?></a>
                <a href="#" class="w3-bar-item w3-button" onclick="create_template('secure-service')"><?= _("Secure") ?></a>
            </div>

            <a href="#" class="w3-bar-item w3-button" onclick="create_template('router')"><?= _("Router") ?></a>

        </div>        
    </div>

    <h1><?= _("Content - Files") ?></h1>
    <div id="files-listing"></div>
</div>

<script>
        /**
         * Toggle accordion visible.
         * @param {String} id The document element ID.
         */
        function toggle_accordion(id) {
            var x = document.getElementById(id);
            if (x.className.indexOf("w3-show") === -1) {
                x.className += " w3-show";
                x.previousElementSibling.className += " w3-green";
            } else {
                x.className = x.className.replace(" w3-show", "");
                x.previousElementSibling.className =
                        x.previousElementSibling.className.replace(" w3-green", "");
            }
        }

        /**
         * Create new directory and reload table.
         */
        function create_directory() {
            var target = prompt("<?= _("Give name for new directory:") ?>", "directory1");
            if (target !== null) {
                api.create('directory', target, function (xhr) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.status === 'success') {
                        load_content_section('files-listing', 'files');
                    } else if (response.status === 'failure') {
                        alert(response.message);
                    }
                });
            }
        }

        /**
         * Create new empty file and reload table.
         */
        function create_file() {
            var target = prompt("<?= _("Give name for new file:") ?>", "file1.phtml");
            if (target !== null) {
                api.create('file', target, function (xhr) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.status === 'success') {
                        load_content_section('files-listing', 'files');
                    } else if (response.status === 'failure') {
                        alert(response.message);
                    }
                });
            }
        }

        /**
         * Create file from template and reload table.
         * @param {String} source The template source.
         */
        function create_template(source) {
            var target = prompt("<?= _("Give name for new file:") ?>", source + "1.php");
            if (target !== null) {
                api.create(source, target, function (xhr) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.status === 'success') {
                        load_content_section('files-listing', 'files');
                    } else if (response.status === 'failure') {
                        alert(response.message);
                    }
                });
            }
        }

        /**
         * Delete target file.
         * @param {String} target The target file.
         */
        function delete_file(target) {
            api.delete(target, function (xhr) {
                var response = JSON.parse(xhr.responseText);
                if (response.status === 'success') {
                    load_content_section('files-listing', 'files');
                } else if (response.status === 'failure') {
                    alert(response.message);
                }
            });
        }

        /**
         * Upload file using create/update pattern.
         * @param {File} file The filesystem API object.
         */
        function upload_file(file) {
            var reader = new FileReader();

            reader.onload = function (event) {
                api.create('file', file.name, function (xhr) {
                    var response = JSON.parse(xhr.responseText);
                    if (response.status === 'success') {
                        api.update(file.name, event.target.result, function (xhr) {
                            response = JSON.parse(xhr.responseText);
                            if (response.status === 'success') {
                                load_content_section('files-listing', 'files');
                            } else if (response.status === 'failure') {
                                alert(response.message);
                            }
                        });
                    } else if (response.status === 'failure') {
                        alert(response.message);
                    }
                });
            }

            reader.readAsBinaryString(file);
        }

        /**
         * The file drop handler.
         * @param {DragEvent} event The drag/drop event.
         */
        function drop_handler(event) {
            var files = event.dataTransfer.files;
            var items = event.dataTransfer.items;

            for (var i = 0; i < files.length; ++i) {
                var item = items[i];
                var file = files[i];
                var entry = item.webkitGetAsEntry();
                if (entry.isFile) {
                    upload_file(file);
                }
            }
        }

        // 
        // Attach drag/drop event handlers on load.
        // 
        window.onload = function () {
            var dropbox = document.getElementById('files-listing');

            dropbox.ondragenter = function (event) {
                event.preventDefault();
                event.stopPropagation();
            };
            dropbox.ondragover = function (event) {
                event.preventDefault();
                event.stopPropagation();
            };
            dropbox.ondrop = function (event) {
                event.preventDefault();
                event.stopPropagation();
                drop_handler(event);
            };
        }

</script>
